events {
    worker_connections 1024;
}

http {
    upstream code_server {
        server 127.0.0.1:8080;
    }
    
    upstream dev_server {
        server 127.0.0.1:3000;
    }
    
    upstream mcp_server {
        server 127.0.0.1:8000;
    }

    server {
        listen 80;
        server_name _;

        # Auth endpoint for validating Bearer tokens
        location = /auth {
            internal;
            proxy_pass http://mcp_server/auth-validate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
        }

        # Route /8080/* to code-server with Bearer token auth
        location /8080/ {
            # Validate authorization using internal auth endpoint
            auth_request /auth;
            
            # Set error responses for auth failures
            error_page 401 = @auth_error;
            
            rewrite ^/8080/(.*) /$1 break;
            proxy_pass http://code_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 86400;
        }
        
        # Handle auth errors
        location @auth_error {
            add_header Content-Type application/json always;
            return 401 '{"error": "Authorization required"}';
        }

        # Route /dashboard to MCP server with Bearer token auth
        location /dashboard {
            # Validate authorization using internal auth endpoint
            auth_request /auth;
            
            # Set error responses for auth failures
            error_page 401 = @auth_error;
            
            proxy_pass http://mcp_server/dashboard;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 86400;
        }

        # Route /3000/* to dev server (React/Vite app)
        location /3000/ {
            rewrite ^/3000/(.*) /$1 break;
            proxy_pass http://dev_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Route /8000/* to MCP server
        location /8000/ {
            rewrite ^/8000/(.*) /$1 break;
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Route /sse to MCP server /mcp endpoint
        location /sse {
            proxy_pass http://mcp_server/mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Default route - redirect to dev server
        location / {
            proxy_pass http://dev_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
    }
}
