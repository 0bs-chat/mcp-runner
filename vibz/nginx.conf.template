events {
    worker_connections 1024;
}

http {
    map $uri $machine_id {
        ~^/(?:8080|8000)/([^/]+)/ $1;
        ~^/([^/]+)/ $1;
        default "";
    }

    map $machine_id $target_host {
        default "";
        ~.+ $machine_id.vm.myapp.internal;
    }

    # Common proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_buffering off;

    server {
        listen 80;
        server_name _;

        location ~ ^/8080/([^/]+)/([^/]+)/ {
            set $machine_id $1;
            proxy_pass http://[$target_host]:8080/;
        }

        location ~ ^/8000/([^/]+)/ {
            set $machine_id $1;
            proxy_pass http://[$target_host]:8000/;
        }

        location ~ ^/([^/]+)/ {
            set $machine_id $1;
            proxy_pass http://[$target_host]:3000/;
        }

        location ~ ^/sse/([^/]+)/ {
            set $machine_id $1;
            proxy_pass http://[$target_host]:8000/mcp/;
        }

        error_page 401 = /_unauthorized;
        location = /_unauthorized {
            internal;
            add_header Content-Type application/json;
            return 401 '{"error":"unauthorized"}';
        }
    }
}